// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name flutter_secure_storage
import Flutter
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import flutter_secure_storage
@objc @_inheritsConvenienceInitializers public class SwiftFlutterSecureStoragePlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin, Flutter.FlutterStreamHandler {
  @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  public func applicationProtectedDataDidBecomeAvailable(_ application: UIKit.UIApplication)
  public func applicationProtectedDataWillBecomeUnavailable(_ application: UIKit.UIApplication)
  @objc public func onListen(withArguments arguments: Any?, eventSink: @escaping Flutter.FlutterEventSink) -> Flutter.FlutterError?
  @objc public func onCancel(withArguments arguments: Any?) -> Flutter.FlutterError?
  @objc override dynamic public init()
  @objc deinit
}
